#include <stc15.h>
#include "led8.h"
/************* 外部变量和本地变量声明 **************/
extern u8 LED8[8]; //显示缓冲，在 LED8.c 中声明
bit F_T0=0; //1ms 中断软标志
bit F_incdec=0,F_stop=0; //运行参数，初始为增量计数器，不停止
u8 Count=0; //unsigned char 与 s8,u16 在 led8.h 中定义
/**************** T0 中断初始化函数 ******************/
void T0_Init()
{
#define MAIN_Fosc 22118400L //定义主时钟
#define Timer0_Reload (65536UL -(MAIN_Fosc / 1000))
AUXR = 0x80; //Timer0 set as 1T, 16 bits timer auto-reload,
TH0 = (u8)(Timer0_Reload / 256);
TL0 = (u8)(Timer0_Reload % 256);
ET0 = 1; //T0 interrupt enable
PT0 = 1; //设置 T0 我高优先级
TR0 = 1; //启动 T0
}
/**************** INT0/INT1 中断初始化函数 ******************/
void INT_Init()
{
IT0 = 1; //INT0 下降沿中断
	IE1 = 0; //外中断 1 标志位
IE0 = 0; //外中断 0 标志位
EX1 = 1; //INT1 Enable
EX0 = 1; //INT0 Enable
EA = 1; //允许总中断
}
/********************** 端口初始化 ************************/
void Port_Init()
{
P0M1 = 0; P0M0 = 0; //设置为准双向口
P1M1 = 0; P1M0 = 0; //设置为准双向口
P2M1 = 0; P2M0 = 0; //设置为准双向口
P3M1 = 0; P3M0 = 0; //设置为准双向口
P4M1 = 0; P4M0 = 0; //设置为准双向口
P5M1 = 0; P5M0 = 0; //设置为准双向口
P6M1 = 0; P6M0 = 0; //设置为准双向口
P7M1 = 0; P7M0 = 0; //设置为准双向口
}
void delay_ms(u8 ms)
{
u16 i;
do{
i = MAIN_Fosc / 16000;
while(--i) ; //16T per loop
}while(--ms);
}
/********************* INT0 中断函数 *************************/
void INT0_int (void) interrupt 0 //进中断时已经清除标志
{
F_incdec^=1; //sw17 乒乓键，改变计数方向标志
delay_ms(20); //软件延时消抖动
}
/********************* INT1 中断函数 *************************/
void INT1_int (void) interrupt 2 //进中断时已经清除标志
{
F_stop^=1; //sw18 乒乓键，改变计数启停标志
delay_ms(20); //软件延时消抖动
}
/********************** T0 1ms 中断函数 ************************/
void T0_int (void) interrupt 1
{
DisplayScan(); //1ms 扫描显示一位
F_T0 = 1; //1ms 时间到标志
}
/********************** 显示计数函数 ************************/
void DisplayCount(void)
{
LED8[5] = Count/100; //百位
LED8[6] = (Count%100) / 10; //十位
LED8[7] = Count % 10; //个位
}
/********************** 主函数 ************************/
void main(void)
{
u16 i=0;
Port_Init(); //初始化
T0_Init();
INT_Init();
for(i=0; i<8; i++) LED8[i] = DIS_BLACK; //上电消隐
while(1) {
if(F_T0) { //1ms 到
F_T0 = 0;
if(!F_stop)
if(++i >= 500) { //1 秒到
i=0;
if(!F_incdec){ //根据计数方向更新计数
if(++Count==200) Count=0;
} else {
if(Count==0) Count=199;
else Count--;
}
DisplayCount(); //更新显示缓冲区
}
}
}
}