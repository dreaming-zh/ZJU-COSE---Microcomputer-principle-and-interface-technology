C51 COMPILER V9.60.0.0   SERIAL                                                            06/01/2022 16:38:55 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE SERIAL
OBJECT MODULE PLACED IN .\Objects\serial.obj
COMPILER INVOKED BY: D:\Keil\C51\BIN\C51.EXE serial.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\seria
                    -l.lst) TABS(2) OBJECT(.\Objects\serial.obj)

line level    source

   1          #include <stc15.h>
   2          #include "gdef.h"
   3          #include "serial.h"
   4          
   5          /**************** T1定时器初始化函数 ******************/
   6          void T1_Init(u16 brt)
   7          {
   8   1        #define Timer_Reload   (65536UL - MAIN_Fosc/4/brt) //Timer1 波特率发生器
   9   1      
  10   1        AUXR |=  (1<<6);  //T1x12=1: Timer1 1T, 16 bits timer auto-reload                          
  11   1        TH1 = (u8)(Timer_Reload / 256);
  12   1        TL1 = (u8)(Timer_Reload % 256);
  13   1          TR1 = 1;    //Timer1 run
  14   1      }  
  15          
  16          void Uart_Init(u16 brt)   //19200bps@22.1184MHz
  17          {
  18   1        SCON = (SCON & 0x3f) | 0x40;  //UART1模式, SM0 SM1=01: 8位数据,可变波特率
  19   1        REN = 1;  //允许接收
  20   1        AUXR &= ~0x01;    //S1 BRT Use Timer1;
  21   1        T1_Init(brt);
  22   1      }
  23          
  24          #define   UART_BUF_LENGTH 50  //串口缓冲长度
  25          u8  RX_Ptr=0,RX_Get=0;  //接收计数
  26          bit TX_Busy;    
  27          u8  xdata   RX_Buffer[UART_BUF_LENGTH]; //接收缓冲   
  28          
  29          void S1_int (void) interrupt UART1_VECTOR
  30          {
  31   1        if(RI)
  32   1        {
  33   2          RI = 0;
  34   2          if((RX_Ptr+1)%UART_BUF_LENGTH==RX_Get) return;  // 缓冲满
  35   2          RX_Ptr=(RX_Ptr+1)%UART_BUF_LENGTH;
  36   2          RX_Buffer[RX_Ptr] = SBUF;
  37   2        }
  38   1      
  39   1        if(TI)
  40   1        {
  41   2          TI = 0;
  42   2          TX_Busy = 0;
  43   2        }
  44   1      }
  45          
  46          s8 putchar(s8 ch)
  47          {
  48   1        SBUF = ch;
  49   1        TX_Busy = 1;
  50   1        while(TX_Busy); 
  51   1        return ch;       //返回已经发送的数据
  52   1      }
  53          
  54          s8 _getkey(void)   
C51 COMPILER V9.60.0.0   SERIAL                                                            06/01/2022 16:38:55 PAGE 2   

  55          { 
  56   1        u8 ch;
  57   1        
  58   1        while(RX_Ptr == RX_Get);  //缓冲空，等地数据接收
  59   1        ES = 0;
  60   1        ch = RX_Buffer[RX_Get]; 
  61   1        RX_Get = (RX_Get + 1) % UART_BUF_LENGTH;
  62   1        ES = 1;
  63   1        return ch;
  64   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    241    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =     50    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      2       2
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
