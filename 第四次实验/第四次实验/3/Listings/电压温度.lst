C51 COMPILER V9.59.0.0   ________                                                          06/05/2022 14:24:33 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE ________
OBJECT MODULE PLACED IN .\Objects\电压温度.obj
COMPILER INVOKED BY: E:\Keil_v5\C51\BIN\C51.EXE 电压温度.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\
                    -电压温度.lst) TABS(2) OBJECT(.\Objects\电压温度.obj)

line level    source

   1          /*************  本程序功能说明  **************
   2          显示效果为: 手机号码循环移位
   3          独立键盘，按SW17左移，按SW18右移
   4          ******************************************/
   5          #include <stc15.h>
   6          #include <intrins.h>
   7          #include <string.h>
   8          #include <stdio.h>
   9          #include "gdef.h"
  10          #include "led8.h"
  11          #include "adc.h"
  12          #include "serial.h"
  13          
  14          #define StrLen strlen(disp_string)
  15          
  16          /*************  外部变量和本地变量声明    **************/  
  17          extern u8  LED8[8];         //显示缓冲
  18          
  19          bit F_T0=0;     //1ms中断软标志
  20          u8  disp_index=0, F_Dir=1;  //F_Dir方向标记，0左移 1 不动 2右移
  21          
  22          /**************** T0定时器初始化函数 ******************/
  23          void T0_Init()
  24          {
  25   1        #define     Timer_Reload   (65536UL -(MAIN_Fosc / 1000))       //Timer0 中断频率, 1000次/秒
  26   1      
  27   1          AUXR = 0x80;    //Timer0 set as 1T, 16 bits timer auto-reload
  28   1          TH0 = (u8)(Timer_Reload / 256);
  29   1          TL0 = (u8)(Timer_Reload % 256);
  30   1          TR0 = 1;    //Timer0 run
  31   1      }   
  32          
  33          
  34          /**************** 中断初始化函数 ******************/
  35          void INT_Init()
  36          {
  37   1        ET0 = 1;    //Timer0 interrupt enable
  38   1        PT0 = 1;
  39   1        ET1 = 0;  //Tim1仅当作波特率发生器
  40   1          ES = 1;   
  41   1        EA = 1;     //允许总中断
  42   1      } 
  43          
  44          /********************** 端口初始化 ************************/
  45          void Port_Init()
  46          {
  47   1          P0M1 = 0;   P0M0 = 0;   //设置为准双向口
  48   1          P1M1 = 0;   P1M0 = 0;   //设置为准双向口
  49   1          P2M1 = 0;   P2M0 = 0;   //设置为准双向口
  50   1          P3M1 = 0;   P3M0 = 0;   //设置为准双向口
  51   1          P4M1 = 0;   P4M0 = 0;   //设置为准双向口
  52   1          P5M1 = 0;   P5M0 = 0;   //设置为准双向口
  53   1          P6M1 = 0;   P6M0 = 0;   //设置为准双向口
  54   1          P7M1 = 0;   P7M0 = 0;   //设置为准双向口
C51 COMPILER V9.59.0.0   ________                                                          06/05/2022 14:24:33 PAGE 2   

  55   1      }
  56          
  57          /********************** T0 1ms中断函数 ************************/
  58          void T0_int (void) interrupt TIMER0_VECTOR
  59          {
  60   1          DisplayScan();  //1ms扫描显示一位
  61   1          F_T0 = 1;      //1ms标志    
  62   1      } 
  63          
  64          void DispClr()
  65          { 
  66   1        u8 i;
  67   1      
  68   1        for(i=0; i<8; i++)  LED8[i] = DIS_BLACK; //上电消隐
  69   1      }
  70          
  71          u16 DispVdd()
  72          {
  73   1        u8 i;
  74   1        u16 j;
  75   1      
  76   1        for(j=0,i=0; i<16; i++)   j += Get_ADC10bitResult(8); //内部基准ADC, P1ASF=0, 读0通道
  77   1          j = (u32)128000UL*16 / j;  // ADC = 1024 * Uref / Ux, 则 Ux = 1024 * Uref / ADC = 1024 * 1.25 / ADC = 
             -1280 / ADC
  78   1      
  79   1          LED8[0] = j / 100 + DIS_DOT;    //显示MCU电压值, 计算时放大了100倍, 电压有两位小数.
  80   1          LED8[1] = (j % 100) / 10;
  81   1          LED8[2] = j % 10; 
  82   1      
  83   1        return j;
  84   1      }    
  85          
  86          u16 DispNTC()
  87          {
  88   1        u8 i;
  89   1        u16 j;
  90   1      
  91   1        for(j=0,i=0; i<4; i++) j += Get_ADC10bitResult(3);  //通道3，NTC  
  92   1          j = get_temperature(j); //计算温度值
  93   1      
  94   1          if(j >= 400)    F0 = 0, j -= 400;       //温度 >= 0度
  95   1          else            F0 = 1, j  = 400 - j;   //温度 <  0度
  96   1          LED8[4] = j / 1000;     //显示温度值
  97   1          LED8[5] = (j % 1000) / 100;
  98   1          LED8[6] = (j % 100) / 10 + DIS_DOT;
  99   1          LED8[7] = j % 10;
 100   1      
 101   1          if(LED8[4] == 0)   //可能是3位或者2位温度
 102   1          if(LED8[5] == 0)  {       
 103   2              LED8[4] = LED8[5] = DIS_BLACK;
 104   2            if(F0)  LED8[5] = DIS_;     //显示- 
 105   2          } else {
 106   2            LED8[4] = DIS_BLACK;
 107   2            if(F0)  LED8[4] = DIS_;     //显示-
 108   2          }
 109   1      
 110   1        return j;
 111   1      }   
 112          
 113          
 114          /********************** 主函数 ************************/
 115          void main(void)
C51 COMPILER V9.59.0.0   ________                                                          06/05/2022 14:24:33 PAGE 3   

 116          {
 117   1        static u16 msecond=0;
 118   1        static bit NTC=0;
 119   1      
 120   1        Port_Init();
 121   1        T0_Init();
 122   1        INT_Init();    
 123   1        ADC_Init();
 124   1        Uart_Init(38400);
 125   1         
 126   1        DispClr();
 127   1          while(1) {
 128   2          if(F_T0) {  //1ms到
 129   3            F_T0 = 0;
 130   3                  if(++msecond >= 500) {   //500ms测一个数据
 131   4              msecond = 0;  
 132   4              if(!NTC) {             
 133   5                P1ASF = 0x01<<3;       //设置P1.3用于ADC通道3，NTC连接到ADC3
 134   5              }  else {
 135   5                printf("%4.1f\r\n",DispNTC()/10.0);
 136   5                P1ASF = 0;        //准备P1用于第9通道测试内部BGV
 137   5              }
 138   4              NTC^=1;
 139   4                  }  
 140   3              }
 141   2          }
 142   1      } 


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    569    ----
   CONSTANT SIZE    =      8    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      4       6
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      2    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
